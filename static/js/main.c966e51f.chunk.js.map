{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Span","span","Input","input","HR","hr","P","p","SpanP","props","total","App","useState","value","setValue","tips","setTips","className","htmlFor","type","id","onChange","e","parseInt","target","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAIMA,EAAQC,IAAOC,MAAV,2CAILC,EAAOF,IAAOG,KAAV,sEAKJC,EAAQJ,IAAOK,MAAV,qFAMLC,EAAKN,IAAOO,GAAV,2CAIFC,EAAIR,IAAOS,EAAV,8EAKDC,EAAQV,YAAOE,EAAPF,CAAH,6DAGP,SAAAW,GAAK,OAAIA,EAAMC,OAAS,yCAmDbC,MAhDf,WAAgB,IAAD,EACYC,mBAAS,GADrB,mBACPC,EADO,KACAC,EADA,OAEUF,mBAAS,IAFnB,mBAEPG,EAFO,KAEDC,EAFC,KAId,OACC,qBAAKC,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,wDACA,eAACpB,EAAD,CAAOqB,QAAQ,cAAf,UACC,cAAClB,EAAD,kCACA,cAACE,EAAD,CACCiB,KAAK,SACLC,GAAG,cACHP,MAAOA,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASS,SAASD,EAAEE,OAAOX,cAG9C,eAAChB,EAAD,CAAOqB,QAAQ,aAAf,UACC,cAAClB,EAAD,6CACA,cAACE,EAAD,CACCiB,KAAK,SACLC,GAAG,aACHP,MAAOE,EACPM,SAAU,SAACC,GAAD,OAAON,EAAQO,SAASD,EAAEE,OAAOX,cAG5CA,EAAQ,GACH,qCACE,cAACT,EAAD,IACN,eAACE,EAAD,WACC,cAACE,EAAD,uCAA8BK,EAAMY,QAAQ,MAC5C,cAACjB,EAAD,sCAA6BO,EAA7B,mBACCF,GACCE,EAAO,MACPU,QAAQ,MACV,uBACA,cAACjB,EAAD,CAAOE,OAAK,EAAZ,oCACCG,EACAA,GAASE,EAAO,MACfU,QAAQ,kBC7DFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c966e51f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nconst Label = styled.label`\n\twidth: 25%;\n`;\n\nconst Span = styled.span`\n\tdisplay: inline-block;\n\twidth: 100%;\n`;\n\nconst Input = styled.input`\n\twidth: 90%;\n\tpadding: 10px;\n\tmargin-bottom: 32px;\n`;\n\nconst HR = styled.hr`\n\twidth: 25%;\n`;\n\nconst P = styled.p`\n\tfont-size: 20px;\n\ttext-transform: uppercase;\n`;\n\nconst SpanP = styled(Span)`\n\tmargin-bottom: 10px;\n\n  ${props => props.total && 'font-weight: bold; font-size: 32px;'}\n`;\n\nfunction App() {\n\tconst [value, setValue] = useState(0);\n\tconst [tips, setTips] = useState(10);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Calculadora de Gorjeta</h1>\n\t\t\t\t<Label htmlFor=\"value-input\">\n\t\t\t\t\t<Span>Quando deu a conta?</Span>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tid=\"value-input\"\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={(e) => setValue(parseInt(e.target.value))}\n\t\t\t\t\t/>\n\t\t\t\t</Label>\n\t\t\t\t<Label htmlFor=\"tips-input\">\n\t\t\t\t\t<Span>Qual a porcentagem de gorjeta?</Span>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tid=\"tips-input\"\n\t\t\t\t\t\tvalue={tips}\n\t\t\t\t\t\tonChange={(e) => setTips(parseInt(e.target.value))}\n\t\t\t\t\t/>\n\t\t\t\t</Label>\n\t\t\t\t{value > 0 && (\n          <>\n            <HR />\n\t\t\t\t\t\t<P>\n\t\t\t\t\t\t\t<SpanP>{`Valor da conta: R$ ${value.toFixed(2)}`}</SpanP>\n\t\t\t\t\t\t\t<SpanP>{`Valor da gorjeta (${tips}%): R$ ${(\n\t\t\t\t\t\t\t\tvalue *\n\t\t\t\t\t\t\t\t(tips / 100)\n\t\t\t\t\t\t\t).toFixed(2)}`}</SpanP>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<SpanP total>{`Valor Total: R$ ${(\n\t\t\t\t\t\t\t\tvalue +\n\t\t\t\t\t\t\t\tvalue * (tips / 100)\n\t\t\t\t\t\t\t).toFixed(2)}`}</SpanP>\n\t\t\t\t\t\t</P>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}